<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>gov.ncbi.pmc</groupId>
  <artifactId>pmc-citation-exporter</artifactId>
  <version>1.1.0-SNAPSHOT</version>
  <name>PMC Citation Exporter Service</name>
  <!-- <url>http://github.com/ncbi/citation-exporter</url>  -->
  <description/>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <jetty.version>9.2.1.v20140609</jetty.version>
    <slf4j.version>1.7.7</slf4j.version>
  </properties>

  <repositories>
    <repository>
      <id>oss-snapshots-repo</id>
      <name>Sonatype OSS Maven Repository</name>
      <url>https://oss.sonatype.org/content/groups/public</url>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>daily</updatePolicy>
      </snapshots>
    </repository>
    <repository>
      <id>jitpack.io</id>
      <url>https://jitpack.io</url>
    </repository>
  </repositories>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>xml-resolver</groupId>
      <artifactId>xml-resolver</artifactId>
      <version>1.2</version>
    </dependency>

  <!--
    FIXME: this is experimental; let's see how it goes.
    Load the specific fork of citeproc-java using jitpack.io,
    specifying the github repo, and a commit, explicitly.
    <dependency>
      <groupId>de.undercouch</groupId>
      <artifactId>citeproc-java</artifactId>
      <version>0.7-SNAPSHOT</version>
    </dependency>
  -->
    <dependency>
      <groupId>com.github.Klortho</groupId>
      <artifactId>citeproc-java</artifactId>
      <version>3f30f220c279557892d69c9ec95b92d84cf2114d</version>
    </dependency>

    <dependency>
      <groupId>org.citationstyles</groupId>
      <artifactId>styles</artifactId>
      <version>1.0.1-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.citationstyles</groupId>
      <artifactId>locales</artifactId>
      <version>1.0.1-SNAPSHOT</version>
    </dependency>

    <!-- Jetty -->
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-server</artifactId>
      <version>${jetty.version}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-servlets</artifactId>
      <version>${jetty.version}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-webapp</artifactId>
      <version>${jetty.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>4.3.3</version>
    </dependency>

    <!-- Rhino:  as of 6/11/2014, the latest version is 1.7R4. -->
    <dependency>
      <groupId>org.mozilla</groupId>
      <artifactId>rhino</artifactId>
      <version>1.7R4</version>
    </dependency>

    <dependency>
      <groupId>net.sf.saxon</groupId>
      <artifactId>Saxon-HE</artifactId>
      <version>9.5.1-4</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.4</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>2.3.1</version>
    </dependency>

  <!--
    Kitty-cache is a java library that has a pom.xml file, but is not uploaded
    to Maven Central, or any other public repository. So, we'll use jitpack.io
    to declare manage this dependency, specifying a commit explicitly.
    <dependency>
      <groupId>com.spaceprogram</groupId>
      <artifactId>KittyCache</artifactId>
      <version>1.2</version>
    </dependency>
  -->
    <dependency>
      <groupId>com.github.Klortho</groupId>
      <artifactId>kitty-cache</artifactId>
      <version>065b8d34e2b16c991c4d9db7cdbd16ec1038f325</version>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>${slf4j.version}</version>
    </dependency>

    <!--  citeproc-java uses this -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.3.2</version>
    </dependency>
  </dependencies>

  <build>
    <!-- This allows us to open files from this directory from within unit tests
    <resources>
      <resource>
        <directory>src/main/webapp</directory>
      </resource>
    </resources> -->

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.1</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.3</version>
        <configuration>
          <failOnMissingWebXml>false</failOnMissingWebXml>
        </configuration>
      </plugin>

      <!-- Jetty Maven plugin -->
      <plugin>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <version>${jetty.version}</version>
        <configuration>
          <scanIntervalSeconds>2</scanIntervalSeconds>
          <scanTargetPatterns>
            <scanTargetPattern>
              <directory>src/main/resources</directory>
              <includes>
                <scanTargetPatterns>**/*.*</scanTargetPatterns>
              </includes>
            </scanTargetPattern>
          </scanTargetPatterns>
          <systemProperties>
            <systemProperty>
              <name>jetty.port</name>
              <value>11999</value>
            </systemProperty>
            <systemProperty>
              <name>log</name>
              <value>log</value>
            </systemProperty>
            <systemProperty>
              <name>log_level</name>
              <value>DEBUG</value>
            </systemProperty>
          </systemProperties>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.1</version>
        <executions>
          <execution>
            <goals>
              <goal>java</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <mainClass>gov.ncbi.pmc.cite.App</mainClass>
        </configuration>
      </plugin>


      <!--
        Declare other directories and resources that should be
        copied into the final jar package.  Note that src/main/resources/* are copied automatically,
        but we have to explicitly specify src/main/webapp.
      -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.5</version>
        <executions>
          <execution>
            <id>add-resource</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>add-resource</goal>
            </goals>
            <configuration>
              <resources>
                <resource>
                  <directory>src/main/webapp</directory>
                  <targetPath></targetPath>
                </resource>
                <!--
                  If these exist, then use them instead of the org.citationstyles jar files
                -->
                <resource>
                  <directory>styles</directory>
                  <targetPath></targetPath>
                </resource>
                <resource>
                  <directory>locales</directory>
                  <targetPath></targetPath>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>2.3</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <filters>
                <!-- Stuff to exclude from all artifacts -->
                <filter>
                  <artifact>*:*</artifact>
                  <excludes>
                    <exclude>**/*.DSA</exclude>
                    <exclude>**/*.RSA</exclude>
                    <exclude>**/*.SF</exclude>
                  </excludes>
                </filter>
              </filters>
              <!-- Set the main class that will be the application entry point, in the executable jar -->
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>gov.ncbi.pmc.cite.WebServer</mainClass>
                </transformer>
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>dev</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <configuration>
              <excludes>
                <exclude>gov/ncbi/pmc/cite/StcacheNxmlItemSource.java</exclude>
                <exclude>gov/ncbi/pmc/cite/StcachePubOneItemSource.java</exclude>
              </excludes>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>prod</id>
      <dependencies>
        <dependency>
          <groupId>gov.ncbi.pmc</groupId>
          <artifactId>pmc-lib</artifactId>
          <version>0.1</version>
        </dependency>
      </dependencies>
    </profile>
  </profiles>
</project>
